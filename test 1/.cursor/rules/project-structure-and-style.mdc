# 프로젝트 구조 및 코드 스타일 가이드

- 메인 로직은 [Code.js](mdc:Code.js)에 위치하며, 설정은 [appsscript.json](mdc:appsscript.json)에서 관리합니다.
- 배포/유틸리티 코드는 [최신배포 웹앱 URL.js](mdc:최신배포 웹앱 URL.js)에 위치합니다.

## 반드시 지켜야 할 규칙

- 함수명, 변수명은 **직관적이고 명확하게** 작성 (예: getLatestSheet, uniqueName)
- **한글 주석**을 적극적으로 사용하여 코드의 맥락, 이유, 목적을 설명
- 상수/설정은 별도 객체(CFG 등)로 분리하여 하드코딩 금지
- 최신 JS 문법(ES6+) 적극 사용 (const/let, 템플릿 리터럴, 화살표 함수 등)
- 예외 상황(입력값, 데이터 없음, 외부 API 오류 등)은 반드시 예외처리 (return, throw, try-catch 등)
- 들여쓰기, 공백, 중괄호 등 **가독성**을 최우선으로 유지
- 함수는 **단일 책임 원칙**을 지키고, 하나의 역할만 수행
- 테스트 함수/코드는 별도 함수로 분리
- 시트/컬럼명 등은 상수로 관리, 직접 문자열 입력 금지

## 반드시 하지 말아야 할 것

- 의미 없는 변수명, 축약어, 불명확한 함수명 사용 금지
- 하드코딩된 시트명, 컬럼 인덱스 직접 사용 금지
- 불필요한 반복문, 중복 연산, 비효율적 코드 작성 금지
- 주석 없이 복잡한 로직 작성 금지
- 예외처리 없는 외부 API/시트 접근 금지
- 오래된 문법(var, function 선언 등) 사용 금지

## 프롬프트 엔지니어링 최적화

- **명확하고 구체적인 질문/명령**을 작성 (예: "시트명 자동 생성 로직을 설명해줘")
- **예시/샘플 코드**를 함께 제공하여 이해를 돕는다
- 반드시 필요한 정보만 요청/응답 (불필요한 정보, 중복 설명 금지)
- 단계별 설명, 요약, 사용법 등 **구조화된 답변**을 우선 제공
- "반드시 지켜야 할 것"과 "하지 말아야 할 것"을 명확히 구분하여 안내
  description:
  globs:
  alwaysApply: true

---
